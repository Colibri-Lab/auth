---
applications:
  desc: '#{auth-storages-applications-desc;Приложения}'
  access-point: auth
  models:
    table: Models\Applications
    row: Models\Application
  params:
    visible: true
    maybepublished: false
  module: Auth
  fields:
    key:
      desc: '#{auth-storages-applications-fields-key-desc;Ключ приложения  (наименование)}'
      type: varchar
      length: "255"
      component: Text
      class: string
      attrs: []
      params:
        required: false
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
      group: window
    token:
      group: window
      desc: '#{auth-storages-applications-fields-token-desc;Токен приложения (постоянный)}'
      note: '#{auth-storages-applications-fields-token-note;Токен приложения, генерируется
        автоматически}'
      type: varchar
      length: "32"
      component: Text
      class: string
      attrs: []
      params:
        required: false
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
        generator: (value) => { return String.MD5((new Date().getTime()) + ''); }
    params:
      group: window
      desc: '#{auth-storages-applications-fields-params-desc;Параметры}'
      note: '#{auth-storages-applications-fields-params-note;Параметры приложения}'
      type: json
      component: Object
      class: ObjectField
      attrs: []
      params:
        required: false
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: Colibri.UI.ObjectViewer
        vertical: true
        visual: false
        code: ""
        mask: ""
        generator: ""
      fields:
        livetime:
          desc: '#{auth-storages-applications-fields-params-livetime-desc;Время жизни}'
          note: '#{auth-storages-applications-fields-params-livetime-note;Время жизни токена}'
          type: int
          component: Number
          class: int
          attrs: []
          params:
            required: false
            enabled: true
            readonly: false
            list: false
            greed: ""
            viewer: ~
            vertical: false
            visual: false
            code: ""
            mask: ""
            generator: ""
          default: "3600"
        domains:
          desc: '#{auth-storages-applications-fields-params-domains-desc;Домены}'
          note: '#{auth-storages-applications-fields-params-domains-note;Паттерны доменов,
            с которых разрешен доступ к приложению}'
          type: json
          component: Array
          class: ArrayField
          attrs: []
          params:
            required: false
            enabled: true
            readonly: false
            list: true
            greed: ""
            viewer: Colibri.UI.ArrayViewer
            vertical: false
            visual: false
            code: ""
            mask: ""
            generator: ""
          fields:
            pattern:
              desc: '#{auth-storages-applications-fields-params-domains-pattern-desc;Паттерн
                домена}'
              note: '#{auth-storages-applications-fields-params-domains-pattern-note;Используйте
                *-у для указания любого количества символов и цифр и ? для указания
                одного символа и цифры}'
              type: varchar
              length: "255"
              component: Text
              class: string
              attrs: []
              params:
                required: false
                enabled: true
                readonly: false
                list: false
                greed: ""
                viewer: ~
                vertical: false
                visual: false
                code: ""
                mask: ""
                generator: ""
          default: json_array()
        allowrenew:
          desc: '#{auth-storages-applications-fields-params-allowrenew-desc;Разрешить восстановление
            по короткому токену}'
          note: '#{auth-storages-applications-fields-params-allowrenew-note;Дает возможность
            получить текущий сессионный токен по короткому постоянному токену пользователя
            (НЕ БЕЗОПАСНО)}'
          type: bool
          component: Checkbox
          class: bool
          default: "0"
          attrs: []
          params:
            required: false
            enabled: true
            readonly: false
            list: false
            greed: ""
            viewer: ~
            vertical: false
            visual: false
            code: ""
            mask: ""
            generator: ""
        roles:
          desc: '#{auth-storages-applications-fields-params-roles-desc;Роли}'
          note: '#{auth-storages-applications-fields-params-roles-note;Роли, которые могут
            исполнять пользователи. Реальная обработка ролей происходит на клиенте}'
          type: json
          component: Array
          class: ArrayField
          default: json_array()
          attrs: []
          params:
            required: false
            enabled: true
            readonly: false
            list: true
            greed: ""
            viewer: Colibri.UI.ArrayViewer
            vertical: false
            visual: false
            code: ""
            mask: ""
            generator: ""
          fields:
            name:
              desc: '#{auth-storages-applications-fields-params-roles-name-desc;Наименование
                роли}'
              type: varchar
              length: "255"
              component: Text
              class: string
              attrs: []
              params:
                required: false
                enabled: true
                readonly: false
                list: false
                greed: ""
                viewer: ~
                vertical: false
                visual: false
                code: ""
                mask: ""
                generator: ""
            desc:
              desc: '#{auth-storages-applications-fields-params-roles-desc-desc;Описание роли}'
              type: varchar
              length: "255"
              component: Text
              class: string
              attrs: []
              params:
                required: false
                enabled: true
                readonly: false
                list: false
                greed: ""
                viewer: ~
                vertical: false
                visual: false
                code: ""
                mask: ""
                generator: ""
        defaultrole:
          desc: '#{auth-storages-applications-fields-params-defaultrole-desc;Роль по умолчанию}'
          note: '#{auth-storages-applications-fields-params-defaultrole-note;Роль, которая
            выставляется по умолчанию}'
          type: varchar
          length: "255"
          component: Text
          class: string
          attrs: []
          params:
            required: true
            enabled: true
            readonly: false
            list: false
            greed: ""
            viewer: ~
            vertical: false
            visual: false
            code: ""
            mask: ""
            generator: ""
      default: json_object()
  indices:
    applications_token_idx:
      fields:
      - token
      type: UNIQUE
      method: BTREE
    applications_key_idx:
      fields:
      - key
      type: UNIQUE
      method: BTREE
sessions:
  desc: '#{auth-storages-sessions-desc;Сессии}'
  access-point: auth
  models:
    table: Models\Sessions
    row: Models\Session
  params:
    visible: true
    maybepublished: false
  module: Auth
  fields:
    member:
      group: window
      desc: '#{auth-storages-sessions-fields-member-desc;Токен пользователя}'
      note: '#{auth-storages-sessions-fields-member-note;Постоянный токен пользователя}'
      type: varchar
      length: "32"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    key:
      group: window
      desc: '#{auth-storages-sessions-fields-key-desc;Ключ сессии}'
      note: '#{auth-storages-sessions-fields-key-note;Генерируется автоматически из
        токена сессии (нужен для поиска)}'
      type: varchar
      length: "32"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: true
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    token:
      group: window
      desc: '#{auth-storages-sessions-fields-token-desc;Токен сессии (JWT)}'
      note: '#{auth-storages-sessions-fields-token-note;JWT токен}'
      type: varchar
      length: "8192"
      component: TextArea
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: true
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    expires:
      group: window
      desc: '#{auth-storages-sessions-fields-expires-desc;Время жизни}'
      note: '#{auth-storages-sessions-fields-expires-note;Количество секунд жизни
        токена, после того, как это время пройдет с момента создания, сессия будет
        заморожена, и ее нужно будет восстановить}'
      type: int
      component: Number
      class: int
      default: "3600"
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    secret:
      group: window
      desc: '#{auth-storages-sessions-fields-secret-desc;Секретный ключ}'
      note: '#{auth-storages-sessions-fields-secret-note;Ключ для декодирования сессии}'
      type: varchar
      length: "32"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: true
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
  indices:
    sessions_member_idx:
      fields:
      - member
      type: NORMAL
      method: BTREE
    sessions_key_idx:
      fields:
      - key
      type: UNIQUE
      method: BTREE
members:
  desc: '#{auth-storages-members-desc;Пользователи}'
  access-point: auth
  models:
    table: Models\Members
    row: Models\Member
  params:
    visible: true
    maybepublished: false
  module: Auth
  fields:
    token:
      desc: '#{auth-storages-members-fields-token-desc;Токен пользователя}'
      note: '#{auth-storages-members-fields-token-note;Постоянный токен пользователя}'
      type: varchar
      length: "32"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: true
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: (value) => { return String.MD5((new Date().getTime()) + ''); }
    email:
      group: window
      desc: '#{auth-storages-members-fields-email-desc;Эл. адрес пользователя}'
      note: '#{auth-storages-members-fields-email-note;Электронный адрес указанный
        при регистрации}'
      type: varchar
      length: "255"
      component: Email
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    phone:
      group: window
      desc: '#{auth-storages-members-fields-phone-desc;Телефон}'
      note: '#{auth-storages-members-fields-phone-note;Телефон в формате «код страны»«код
        внутри страны»«номер» без знаков, только цифры}'
      type: varchar
      length: "50"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    password:
      group: window
      desc: '#{auth-storages-members-fields-password-desc;Пароль}'
      note: '#{auth-storages-members-fields-password-note;Пароль, закодирован, нет
        обратной кодировки}'
      type: varchar
      length: "128"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: true
        list: false
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    firstName:
      group: window
      desc: '#{auth-storages-members-fields-firstName-desc;Имя}'
      type: varchar
      length: "255"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    lastName:
      group: window
      desc: '#{auth-storages-members-fields-lastName-desc;Фамилия}'
      type: varchar
      length: "255"
      component: Text
      class: string
      attrs: []
      params:
        required: true
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    patronymic:
      group: window
      desc: '#{auth-storages-members-fields-patronymic-desc;Отчество}'
      type: varchar
      length: "255"
      component: Text
      class: string
      attrs: []
      params:
        required: false
        enabled: true
        readonly: false
        list: false
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    birthdate:
      group: window
      desc: '#{auth-storages-members-fields-birthdate-desc;Дата рождения}'
      type: date
      component: Date
      class: DateField
      attrs: []
      params:
        required: false
        enabled: true
        readonly: false
        list: true
        greed: ""
        viewer: ~
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
    gender:
      group: window
      desc: '#{auth-storages-members-fields-gender-desc;Пол}'
      type: enum
      component: Select
      class: ValueField
      default: male
      attrs: []
      params:
        required: false
        enabled: true
        readonly: true
        list: true
        greed: ""
        viewer: Colibri.UI.SelectViewer
        vertical: false
        visual: false
        code: ""
        mask: ""
        generator: ""
      values:
      - value: male
        title: '#{auth-storages-members-fields-gender-values-male;Мужской}'
      - value: female
        title: '#{auth-storages-members-fields-gender-values-female;Женский}'
...
